syntax = "proto3";
option go_package = "simple_warehouse/transaction_manager/api";

package simple_warehouse.transaction_manager.api;

import "validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service TransactionManager {
  rpc Insert(InsertRequest) returns (google.protobuf.Empty) {}
  rpc GetDuring(GetDuringRequest) returns (GetDuringResponse) {}
  rpc GetByUser(GetByUserRequest) returns (GetByUserResponse) {}
  rpc AddUser(AddUserRequest) returns (google.protobuf.Empty) {}
}

message ShelfQuantity {
  string shelf_name = 1 [(validate.rules).string.min_len = 1];
  int64 quantity = 2; // < 0 for all
}

message Transaction {
  google.protobuf.Timestamp date = 1;
  int32 action = 2;
  string sku = 3 [(validate.rules).string.min_len = 1];
  repeated ShelfQuantity shelf_quantities = 4 [(validate.rules).repeated.min_items = 1];
  string author_name = 5 [(validate.rules).string.min_len = 1];
}

message InsertRequest {
  int32 action = 1;
  string sku = 2 [(validate.rules).string.min_len = 1];
  repeated ShelfQuantity shelf_quantities = 3 [(validate.rules).repeated.min_items = 1];
  string author_name = 4 [(validate.rules).string.min_len = 1];
}

message GetDuringRequest {
  google.protobuf.Timestamp start_date = 1;
  google.protobuf.Timestamp end_date = 2;
}

message GetDuringResponse {
  repeated Transaction transactions = 1;
}

message GetByUserRequest {
  string author_name = 1 [(validate.rules).string.min_len = 1];
}

message GetByUserResponse {
  repeated Transaction transactions = 1;
}

message AddUserRequest {
  string user_name = 1 [(validate.rules).string.min_len = 1];
}
